# Docker Environment Configuration
spring:
  profiles:
    active: docker
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:zplus_db}
    username: ${DB_USERNAME:zplus_user}
    password: ${DB_PASSWORD:zplus_password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      max-lifetime: 1200000
      connection-timeout: 20000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false
        use_sql_comments: false
    defer-datasource-initialization: true

  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_REQUEST_SIZE:10MB}

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Application Configuration
app:
  jwt:
    secret: ${JWT_SECRET:my-super-secret-jwt-key-for-production-use-256-bit}
    expiration: ${JWT_EXPIRATION:86400000} # 24 hours
  upload:
    dir: ${UPLOAD_DIR:./uploads}
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allow-credentials: true

# Logging Configuration
logging:
  level:
    root: INFO
    com.zplus.adminpanel: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  file:
    name: ${LOG_FILE_PATH:./logs/application.log}
  pattern:
    file: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# Management Endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
