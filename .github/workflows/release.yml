name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build release
      run: |
        chmod +x ./build.sh
        ./build.sh
        
    - name: Create release package
      run: |
        mkdir -p release-package
        cp build/*.jar release-package/
        cp docker-compose.yml release-package/
        cp Dockerfile release-package/
        cp .env.template release-package/
        cp deploy.sh release-package/
        cp deploy.bat release-package/
        cp README.md release-package/
        tar -czf zplus-management-${{ github.ref_name }}.tar.gz release-package/
        zip -r zplus-management-${{ github.ref_name }}.zip release-package/
        
    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git commits
        echo "## Changes in ${{ github.ref_name }}" > CHANGELOG.md
        echo "" >> CHANGELOG.md
        git log $(git describe --tags --abbrev=0 HEAD^)..HEAD --pretty=format:"- %s (%h)" >> CHANGELOG.md || echo "- Initial release" >> CHANGELOG.md
        echo "" >> CHANGELOG.md
        echo "Full Changelog: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo 'initial')...${{ github.ref_name }}" >> CHANGELOG.md
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Z+ Management Platform ${{ github.ref_name }}
        body_path: CHANGELOG.md
        draft: false
        prerelease: ${{ contains(github.ref_name, 'beta') || contains(github.ref_name, 'alpha') }}
        
    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: zplus-management-${{ github.ref_name }}.tar.gz
        asset_name: zplus-management-${{ github.ref_name }}.tar.gz
        asset_content_type: application/gzip
        
    - name: Upload Release ZIP
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: zplus-management-${{ github.ref_name }}.zip
        asset_name: zplus-management-${{ github.ref_name }}.zip
        asset_content_type: application/zip

  docker-release:
    runs-on: ubuntu-latest
    needs: release
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build release
      run: |
        chmod +x ./build.sh
        ./build.sh
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/zplus-management:${{ github.ref_name }}
          ${{ secrets.DOCKERHUB_USERNAME }}/zplus-management:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
